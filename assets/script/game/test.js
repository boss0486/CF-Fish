// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html

cc.Class({
    extends: cc.Component,

    properties: {
        ctx: cc.Graphics
    },

    // LIFE-CYCLE CALLBACKS:

    onLoad() {
        this.ctx = this.getComponent(cc.Graphics);

        // var arr = [[-108.0, 242.0], [-102.51251220703125, 249.49374389648438], [-96.10000610351562, 256.95001220703125],
        // [-88.83748626708984, 264.33123779296875], [-80.80001831054688, 271.6000061035156], [-72.0625, 278.71875],
        // [-62.69999313354492, 285.6499938964844], [-52.78750228881836, 292.35626220703125], [-42.399986267089844, 298.79998779296875],
        // [-31.612499237060547, 304.9437561035156], [-20.5, 310.75], [-9.137495040893555, 316.1812438964844],
        // [2.4000091552734375, 321.20001220703125], [14.037506103515625,
        //     325.7687683105469], [25.700037002563477, 329.8500061035156], [37.3125, 333.40625], [48.80002975463867, 336.3999938964844],
        // [60.08753204345703, 338.79376220703125], [71.10003662109375, 340.5500183105469], [81.76254272460938, 341.6312561035156],
        // [101.99999237060547, 341.2749938964844], [111.99998474121094, 339.20001220703125], [122.00001525878906, 335.92498779296875],
        // [132.00001525878906, 331.6000061035156], [142.0, 326.375], [151.99998474121094, 320.3999938964844], [161.99998474121094, 313.8249816894531],
        // [172.00001525878906, 306.79998779296875], [182.00001525878906, 299.4750061035156], [192.0, 292.0], [202.0000457763672, 284.5249938964844],
        // [212.00003051757812, 277.1999816894531], [222.00001525878906, 270.17498779296875], [232.00001525878906, 263.5999755859375],
        // [242.0, 257.625], [252.0000457763672, 252.3999786376953], [262.0000305175781, 248.07498168945312], [272.0000305175781, 244.8000030517578],
        // [282.00006103515625, 242.72499084472656], [302.0, 242.72499084472656], [312.0, 244.8000030517578], [322.0, 248.0749969482422],
        // [332.0, 252.39999389648438], [342.0, 257.625], [352.0, 263.6000061035156], [362.0, 270.1750183105469], [372.0000305175781, 277.20001220703125],
        // [382.0, 284.5249938964844], [392.0, 292.0], [402.0, 299.4750061035156], [412.0000305175781, 306.8000183105469], [422.0000305175781, 313.82501220703125],
        // [432.0, 320.4000244140625], [442.0000305175781, 326.375], [452.0000305175781, 331.6000061035156], [462.0000305175781, 335.9250183105469],
        // [472.0000305175781, 339.20001220703125], [482.0000305175781, 341.2749938964844], [502.0, 341.2749938964844], [512.0, 339.20001220703125],
        // [522.0, 335.92498779296875], [532.0, 331.6000061035156], [542.0, 326.375], [552.0, 320.3999938964844], [562.0, 313.8249816894531],
        // [572.0, 306.79998779296875], [582.0, 299.4750061035156], [592.0, 292.0], [602.0, 284.5249938964844], [612.0, 277.1999816894531],
        // [622.0, 270.17498779296875], [632.0, 263.5999755859375], [642.0, 257.625], [652.0, 252.3999786376953], [662.0, 248.07498168945312],
        // [672.0000610351562, 244.8000030517578], [682.0000610351562, 242.72499084472656], [702.0, 242.72499084472656], [712.0, 244.8000030517578],
        // [722.0, 248.0749969482422], [732.0, 252.39999389648438], [742.0, 257.625], [752.0, 263.6000061035156], [762.0, 270.1750183105469], [772.0, 277.20001220703125],
        // [782.0, 284.5249938964844], [792.0, 292.0], [802.0, 299.4750061035156], [812.0, 306.8000183105469], [822.0, 313.82501220703125], [832.0, 320.4000244140625],
        // [842.0, 326.375], [852.0, 331.6000061035156], [862.0, 335.9250183105469], [872.0000610351562, 339.20001220703125], [882.0000610351562, 341.2749938964844],
        // [902.0, 341.2749938964844], [912.0, 339.20001220703125], [922.0, 335.92498779296875], [932.0, 331.6000061035156], [942.0, 326.375], [952.0, 320.3999938964844],
        // [962.0, 313.8249816894531], [972.0, 306.79998779296875], [982.0, 299.4750061035156], [992.0, 292.0], [1002.0, 284.5249938964844], [1012.0, 277.1999816894531],
        // [1022.0, 270.17498779296875], [1032.0, 263.5999755859375], [1042.0, 257.625], [1052.0, 252.3999786376953], [1062.0, 248.07498168945312], [1072.0, 244.8000030517578],
        // [1082.0, 242.72499084472656], [1102.0, 242.72499084472656], [1112.0, 244.8000030517578], [1122.0, 248.0749969482422], [1132.0, 252.39999389648438], [1142.0, 257.625],
        // [1152.0, 263.6000061035156], [1162.0, 270.1750183105469], [1172.0, 277.20001220703125], [1182.0, 284.5249938964844], [1192.0, 292.0],
        // [1202.0, 299.4750061035156], [1212.0, 306.8000183105469], [1222.0, 313.82501220703125], [1232.0, 320.4000244140625], [1242.0, 326.375], [1252.0, 331.6000061035156],
        // [1262.0, 335.9250183105469], [1272.0, 339.20001220703125], [1282.0, 341.2749938964844], [1302.237548828125, 341.6312561035156], [1312.9000244140625, 340.54998779296875],
        // [1323.9124755859375, 338.7937316894531], [1335.2000732421875, 336.3999938964844], [1346.6875, 333.40625], [1358.300048828125, 329.8500061035156],
        // [1369.9625244140625, 325.76873779296875], [1381.5999755859375, 321.1999816894531], [1393.137451171875, 316.1812438964844], [1404.5, 310.75],
        // [1415.612548828125, 304.9437561035156], [1426.4000244140625, 298.79998779296875], [1436.7874755859375, 292.3562316894531], [1446.699951171875, 285.6499938964844],
        // [1456.0625, 278.71875], [1464.800048828125, 271.5999755859375], [1472.8375244140625, 264.33123779296875], [1480.10009765625, 256.9499816894531],
        // [1486.512451171875, 249.4937286376953], [1492.0, 242.0]];

        // var abc  = [];
        // for (var i = 0; i < arr.length - 1; i++) {
        //     arr[i].forEach(element => {
        //         abc.push({x:element[0], y:element[1]});
        //     });

        // }

        // for (var i = 0; i < arr.length - 1; i++) {
        //     //ctx.beginPath();
        //     this.ctx.moveTo(arr[i][0], arr[i][1]);
        //     this.ctx.quadraticCurveTo(arr[i][0], arr[i][1], arr[i + 1][0], arr[i + 1][1]);
        //     this.ctx.stroke();
        // }
        //#########################################################################################################################
        // this.ctx.strokeColor = new cc.Color().fromHEX('#F00');
        // this.drawCurve(1, 80, [
        //     [100, 1, 90, 45, 140, 25],
        //     [200, 1, 200, 40, 300, 50],
        //     [500, 60, 400, 80, 300, 120],
        //     [300, 120, 200, 160, 100, 80]
        // ]); 
    },
    func_Loaction(bezierArray) {
        // bezierArray = [
        //     cc.v2(3, 3),
        //     cc.v2(37, 301),
        //     //1
        //     cc.v2(129, 177),
        //     cc.v2(227, 2),
        //     //2
        //     cc.v2(347, 87),
        //     cc.v2(361, 303)
        //     //3
        //     // cc.v2(600, 50),
        //     // cc.v2(700, 100),
        //     // //4
        //     // cc.v2(800, 200),
        //     // cc.v2(900, 50),
        //     // //5
        //     // cc.v2(1000, 100),
        //     // cc.v2(1100, -100)
        // ];

        var arrResult = [];
        var i, j, chunk = 3;
        for (i = 0, j = bezierArray.length; i < j; i += chunk) {
            if (i > 0) {
                arrResult.push(bezierArray.slice(i - 1, i - 1 + chunk));
                i = i - 1;
            } else {
                arrResult.push(bezierArray.slice(i, i + chunk));
            }
        }
        //
        console.log(JSON.stringify(arrResult));
        return arrResult;
    },
    start() {

    },

    // update (dt) {},

    drawCurve(x, y, curves) {
        console.log(x);
        console.log(`:::${x}:${y}`);
        console.log(curves);
        var _this = this.ctx;
        this.ctx.moveTo(x, y);
        for (var i = 0; i < curves.length; i++) {
            var c = curves[i]
            _this.bezierCurveTo(c[0], c[1], c[2], c[3], c[4], c[5]);
            //_this.moveTo(c[4], c[5]);
            _this.stroke();
        }
    },
    drawCurve2(x, y, curves, _color) {
        var _this = this.ctx;
        this.ctx.strokeColor = new cc.Color().fromHEX(_color);
        this.ctx.moveTo(x, y);
        for (var i = 0; i < curves.length; i++) {
            var c = curves[i];
            _this.bezierCurveTo(c[0].x, c[0].y, c[1].x, c[1].y, c[2].x, c[2].y);
            //_this.moveTo(c[4], c[5]);
            _this.stroke();
        }
    }
});